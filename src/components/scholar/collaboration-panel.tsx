'use client';

import { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';\nimport { Avatar } from '@/components/ui/avatar';\nimport {\n  Users,\n  MessageCircle,\n  Video,\n  Phone,\n  UserCheck,\n  Clock,\n  AlertCircle,\n  Send,\n  Eye,\n  HandHeart,\n  BookOpen,\n  Star,\n  CheckCircle2,\n  HelpCircle,\n  Lightbulb,\n  MessageSquare,\n  ArrowRight,\n  Globe\n} from 'lucide-react';\nimport { cn } from '@/lib/cn';\n\ninterface Scholar {\n  id: string;\n  name: string;\n  email: string;\n  specialization: string[];\n  status: 'online' | 'away' | 'busy' | 'offline';\n  avatar?: string;\n  currentWorkload: number;\n  rating: number;\n  responseTime: string;\n  location: string;\n  languages: string[];\n}\n\ninterface Consultation {\n  id: string;\n  questionId: string;\n  requestedBy: string;\n  requestedFrom: string;\n  topic: string;\n  status: 'pending' | 'accepted' | 'completed' | 'declined';\n  priority: 'low' | 'medium' | 'high';\n  createdAt: Date;\n  deadline?: Date;\n  question: string;\n  context?: string;\n}\n\ninterface CollaborationPanelProps {\n  scholarId: string;\n  collaborationData: any;\n}\n\nexport function CollaborationPanel({ scholarId, collaborationData }: CollaborationPanelProps) {\n  const [activeTab, setActiveTab] = useState<'scholars' | 'consultations' | 'help'>('scholars');\n  const [onlineScholars, setOnlineScholars] = useState<Scholar[]>([]);\n  const [consultationRequests, setConsultationRequests] = useState<Consultation[]>([]);\n  const [helpRequests, setHelpRequests] = useState<Consultation[]>([]);\n  const [newConsultation, setNewConsultation] = useState({\n    topic: '',\n    question: '',\n    priority: 'medium' as 'low' | 'medium' | 'high',\n    targetScholar: ''\n  });\n\n  useEffect(() => {\n    // Simulate real-time scholar presence\n    const sampleScholars: Scholar[] = [\n      {\n        id: 'dr_ahmad',\n        name: 'Dr. Ahmad Hassan',\n        email: 'ahmad.hassan@quran.edu',\n        specialization: ['Fiqh', 'Hadith', 'Arabic Grammar'],\n        status: 'online',\n        currentWorkload: 12,\n        rating: 4.9,\n        responseTime: '~5 min',\n        location: 'Cairo, Egypt',\n        languages: ['Arabic', 'English']\n      },\n      {\n        id: 'sheikh_omar',\n        name: 'Sheikh Omar Ali',\n        email: 'omar.ali@quran.edu',\n        specialization: ['Tafsir', 'Quranic Sciences'],\n        status: 'busy',\n        currentWorkload: 18,\n        rating: 4.8,\n        responseTime: '~15 min',\n        location: 'Medina, Saudi Arabia',\n        languages: ['Arabic', 'English', 'Urdu']\n      },\n      {\n        id: 'dr_fatima',\n        name: 'Dr. Fatima Khan',\n        email: 'fatima.khan@quran.edu',\n        specialization: ['Aqeedah', 'Islamic History'],\n        status: 'online',\n        currentWorkload: 8,\n        rating: 4.7,\n        responseTime: '~3 min',\n        location: 'Islamabad, Pakistan',\n        languages: ['English', 'Urdu', 'Arabic']\n      },\n      {\n        id: 'imam_yusuf',\n        name: 'Imam Yusuf Ibrahim',\n        email: 'yusuf.ibrahim@quran.edu',\n        specialization: ['Contemporary Issues', 'Islamic Ethics'],\n        status: 'away',\n        currentWorkload: 15,\n        rating: 4.6,\n        responseTime: '~30 min',\n        location: 'London, UK',\n        languages: ['English', 'Arabic']\n      }\n    ];\n\n    const sampleConsultations: Consultation[] = [\n      {\n        id: 'cons_1',\n        questionId: 'q_123',\n        requestedBy: 'current_user',\n        requestedFrom: 'dr_ahmad',\n        topic: 'Hadith Authentication',\n        status: 'pending',\n        priority: 'high',\n        createdAt: new Date(Date.now() - 10 * 60 * 1000),\n        deadline: new Date(Date.now() + 2 * 60 * 60 * 1000),\n        question: 'Need verification of hadith chain authenticity for this question about prayer timing',\n        context: 'The question involves a weak hadith that might mislead learners'\n      },\n      {\n        id: 'cons_2',\n        questionId: 'q_456',\n        requestedBy: 'sheikh_omar',\n        requestedFrom: 'current_user',\n        topic: 'Fiqh Ruling Clarification',\n        status: 'accepted',\n        priority: 'medium',\n        createdAt: new Date(Date.now() - 30 * 60 * 1000),\n        question: 'Could you help clarify the madhab differences on this purification issue?',\n        context: 'Question has multiple valid perspectives that need expert input'\n      }\n    ];\n\n    const sampleHelpRequests: Consultation[] = [\n      {\n        id: 'help_1',\n        questionId: 'q_789',\n        requestedBy: 'new_scholar_1',\n        requestedFrom: 'current_user',\n        topic: 'Question Quality Guidelines',\n        status: 'pending',\n        priority: 'low',\n        createdAt: new Date(Date.now() - 45 * 60 * 1000),\n        question: 'New to the platform, could use guidance on our quality standards',\n        context: 'Junior scholar needs mentoring on moderation best practices'\n      }\n    ];\n\n    setOnlineScholars(sampleScholars);\n    setConsultationRequests(sampleConsultations.filter(c => c.requestedBy === 'current_user'));\n    setHelpRequests(sampleHelpRequests);\n  }, []);\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'online': return <div className=\"w-3 h-3 bg-green-500 rounded-full\" />;\n      case 'busy': return <div className=\"w-3 h-3 bg-red-500 rounded-full\" />;\n      case 'away': return <div className=\"w-3 h-3 bg-yellow-500 rounded-full\" />;\n      default: return <div className=\"w-3 h-3 bg-gray-400 rounded-full\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'online': return 'text-green-600';\n      case 'busy': return 'text-red-600';\n      case 'away': return 'text-yellow-600';\n      default: return 'text-gray-500';\n    }\n  };\n\n  const handleConsultationRequest = (scholarId: string) => {\n    if (!newConsultation.question.trim() || !newConsultation.topic.trim()) {\n      alert('Please fill in topic and question');\n      return;\n    }\n\n    const consultation: Consultation = {\n      id: Date.now().toString(),\n      questionId: 'current_question',\n      requestedBy: 'current_user',\n      requestedFrom: scholarId,\n      topic: newConsultation.topic,\n      status: 'pending',\n      priority: newConsultation.priority,\n      createdAt: new Date(),\n      deadline: new Date(Date.now() + 24 * 60 * 60 * 1000), // 24 hours\n      question: newConsultation.question\n    };\n\n    setConsultationRequests(prev => [...prev, consultation]);\n    setNewConsultation({ topic: '', question: '', priority: 'medium', targetScholar: '' });\n  };\n\n  return (\n    <Card className=\"border-purple-200 bg-gradient-to-br from-purple-50 to-pink-50\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2 text-purple-800\">\n          <Users className=\"h-5 w-5\" />\n          Scholar Collaboration Hub\n          <Badge variant=\"outline\" className=\"ml-auto text-purple-600 border-purple-200\">\n            {onlineScholars.filter(s => s.status === 'online').length} online\n          </Badge>\n        </CardTitle>\n        \n        <div className=\"flex space-x-1 bg-purple-100 p-1 rounded-lg\">\n          {[\n            { id: 'scholars', label: 'Online Scholars', icon: Users },\n            { id: 'consultations', label: 'My Requests', icon: MessageSquare },\n            { id: 'help', label: 'Help Others', icon: HandHeart }\n          ].map(tab => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={cn(\n                  \"flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-all\",\n                  activeTab === tab.id\n                    ? \"bg-white shadow-sm text-purple-800\"\n                    : \"text-purple-600 hover:text-purple-800 hover:bg-purple-50\"\n                )}\n              >\n                <Icon className=\"h-4 w-4\" />\n                {tab.label}\n                {tab.id === 'consultations' && consultationRequests.length > 0 && (\n                  <Badge variant=\"secondary\" className=\"text-xs px-1.5 py-0.5\">\n                    {consultationRequests.length}\n                  </Badge>\n                )}\n                {tab.id === 'help' && helpRequests.length > 0 && (\n                  <Badge variant=\"destructive\" className=\"text-xs px-1.5 py-0.5\">\n                    {helpRequests.length}\n                  </Badge>\n                )}\n              </button>\n            );\n          })}\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        {/* Online Scholars Tab */}\n        {activeTab === 'scholars' && (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n              {onlineScholars.map((scholar) => (\n                <Card key={scholar.id} className=\"bg-white border border-purple-100\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-start justify-between mb-3\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"relative\">\n                          <Avatar className=\"h-10 w-10 bg-purple-100 text-purple-600\">\n                            {scholar.name.split(' ').map(n => n[0]).join('')}\n                          </Avatar>\n                          <div className=\"absolute -bottom-1 -right-1\">\n                            {getStatusIcon(scholar.status)}\n                          </div>\n                        </div>\n                        <div>\n                          <h4 className=\"font-medium text-gray-900\">{scholar.name}</h4>\n                          <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                            <span className={getStatusColor(scholar.status)}>\n                              {scholar.status.charAt(0).toUpperCase() + scholar.status.slice(1)}\n                            </span>\n                            <span>•</span>\n                            <span>{scholar.responseTime}</span>\n                            <span>•</span>\n                            <div className=\"flex items-center gap-1\">\n                              <Star className=\"h-3 w-3 text-yellow-400 fill-current\" />\n                              <span>{scholar.rating}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex gap-1\">\n                        <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                          <MessageCircle className=\"h-4 w-4\" />\n                        </Button>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                          <Video className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <div className=\"flex flex-wrap gap-1\">\n                        {scholar.specialization.map((spec, index) => (\n                          <Badge key={index} variant=\"outline\" className=\"text-xs px-2 py-0\">\n                            {spec}\n                          </Badge>\n                        ))}\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n                        <div className=\"flex items-center gap-1\">\n                          <Globe className=\"h-3 w-3\" />\n                          <span>{scholar.location}</span>\n                        </div>\n                        <div className=\"flex items-center gap-1\">\n                          <Clock className=\"h-3 w-3\" />\n                          <span>Workload: {scholar.currentWorkload}/25</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"text-xs text-muted-foreground\">\n                        Languages: {scholar.languages.join(', ')}\n                      </div>\n                    </div>\n                    \n                    <div className=\"mt-3 pt-3 border-t border-gray-100\">\n                      <Button \n                        variant=\"islamic\" \n                        size=\"sm\" \n                        className=\"w-full text-xs\"\n                        onClick={() => {\n                          setNewConsultation(prev => ({ ...prev, targetScholar: scholar.id }));\n                          setActiveTab('consultations');\n                        }}\n                        disabled={scholar.status === 'offline'}\n                      >\n                        <HelpCircle className=\"h-3 w-3 mr-1\" />\n                        Request Consultation\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Consultations Tab */}\n        {activeTab === 'consultations' && (\n          <div className=\"space-y-4\">\n            {/* New Consultation Request */}\n            <Card className=\"bg-white border border-purple-100\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-base flex items-center gap-2\">\n                  <MessageSquare className=\"h-4 w-4\" />\n                  Request Expert Consultation\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"text-sm font-medium mb-1 block\">Topic</label>\n                    <Input\n                      placeholder=\"e.g., Hadith Authentication, Fiqh Ruling\"\n                      value={newConsultation.topic}\n                      onChange={(e) => setNewConsultation(prev => ({ ...prev, topic: e.target.value }))}\n                    />\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium mb-1 block\">Priority</label>\n                    <select\n                      className=\"flex h-9 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                      value={newConsultation.priority}\n                      onChange={(e) => setNewConsultation(prev => ({ ...prev, priority: e.target.value as any }))}\n                    >\n                      <option value=\"low\">Low Priority</option>\n                      <option value=\"medium\">Medium Priority</option>\n                      <option value=\"high\">High Priority - Urgent</option>\n                    </select>\n                  </div>\n                </div>\n                \n                <div>\n                  <label className=\"text-sm font-medium mb-1 block\">Question Details</label>\n                  <textarea\n                    className=\"w-full p-2 border rounded-md resize-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n                    rows={3}\n                    placeholder=\"Describe your question or the specific help you need...\"\n                    value={newConsultation.question}\n                    onChange={(e) => setNewConsultation(prev => ({ ...prev, question: e.target.value }))}\n                  />\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <div className=\"text-xs text-muted-foreground\">\n                    💡 Be specific about your question to get the best help\n                  </div>\n                  <Button \n                    variant=\"islamic\" \n                    size=\"sm\"\n                    onClick={() => handleConsultationRequest(newConsultation.targetScholar || onlineScholars[0]?.id)}\n                    disabled={!newConsultation.topic.trim() || !newConsultation.question.trim()}\n                  >\n                    <Send className=\"h-4 w-4 mr-2\" />\n                    Send Request\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Active Consultations */}\n            <div className=\"space-y-3\">\n              <h4 className=\"font-medium text-purple-800 flex items-center gap-2\">\n                <Clock className=\"h-4 w-4\" />\n                My Consultation Requests\n              </h4>\n              \n              {consultationRequests.length === 0 ? (\n                <div className=\"text-center py-6 text-muted-foreground\">\n                  <MessageSquare className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                  <p>No active consultation requests</p>\n                </div>\n              ) : (\n                consultationRequests.map((consultation) => {\n                  const scholar = onlineScholars.find(s => s.id === consultation.requestedFrom);\n                  return (\n                    <Card key={consultation.id} className=\"bg-white\">\n                      <CardContent className=\"p-4\">\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <div>\n                            <h5 className=\"font-medium text-gray-900\">\n                              {consultation.topic}\n                            </h5>\n                            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                              <span>To: {scholar?.name || 'Unknown Scholar'}</span>\n                              <span>•</span>\n                              <span>{consultation.createdAt.toLocaleTimeString()}</span>\n                            </div>\n                          </div>\n                          \n                          <div className=\"flex items-center gap-2\">\n                            <Badge \n                              variant={consultation.status === 'pending' ? 'secondary' : \n                                      consultation.status === 'accepted' ? 'default' : 'outline'}\n                              className=\"text-xs\"\n                            >\n                              {consultation.status}\n                            </Badge>\n                            <Badge \n                              variant={consultation.priority === 'high' ? 'destructive' : 'outline'}\n                              className=\"text-xs\"\n                            >\n                              {consultation.priority}\n                            </Badge>\n                          </div>\n                        </div>\n                        \n                        <p className=\"text-sm text-gray-600 mb-3\">\n                          {consultation.question}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                            {consultation.deadline && (\n                              <>\n                                <Clock className=\"h-3 w-3\" />\n                                <span>Deadline: {consultation.deadline.toLocaleDateString()}</span>\n                              </>\n                            )}\n                          </div>\n                          \n                          <div className=\"flex gap-2\">\n                            {consultation.status === 'accepted' && (\n                              <Button variant=\"islamic\" size=\"sm\" className=\"text-xs\">\n                                <MessageCircle className=\"h-3 w-3 mr-1\" />\n                                Continue Discussion\n                              </Button>\n                            )}\n                            <Button variant=\"outline\" size=\"sm\" className=\"text-xs\">\n                              <Eye className=\"h-3 w-3 mr-1\" />\n                              View Details\n                            </Button>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Help Others Tab */}\n        {activeTab === 'help' && (\n          <div className=\"space-y-4\">\n            <div className=\"text-center py-6\">\n              <HandHeart className=\"h-12 w-12 mx-auto mb-4 text-purple-500\" />\n              <h3 className=\"text-lg font-medium text-purple-800 mb-2\">\n                Help Fellow Scholars\n              </h3>\n              <p className=\"text-sm text-purple-600 mb-4\">\n                Share your expertise and strengthen our scholarly community\n              </p>\n            </div>\n            \n            {helpRequests.length === 0 ? (\n              <div className=\"text-center py-6\">\n                <CheckCircle2 className=\"h-8 w-8 mx-auto mb-2 text-emerald-500\" />\n                <p className=\"text-sm text-muted-foreground\">\n                  No pending help requests at the moment\n                </p>\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                {helpRequests.map((request) => (\n                  <Card key={request.id} className=\"bg-white border border-orange-200\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <div>\n                          <h5 className=\"font-medium text-gray-900 flex items-center gap-2\">\n                            {request.topic}\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              Help Request\n                            </Badge>\n                          </h5>\n                          <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                            <span>From: {request.requestedBy}</span>\n                            <span>•</span>\n                            <span>{request.createdAt.toLocaleTimeString()}</span>\n                          </div>\n                        </div>\n                        \n                        <Badge \n                          variant={request.priority === 'high' ? 'destructive' : 'secondary'}\n                          className=\"text-xs\"\n                        >\n                          {request.priority} priority\n                        </Badge>\n                      </div>\n                      \n                      <p className=\"text-sm text-gray-600 mb-3\">\n                        {request.question}\n                      </p>\n                      \n                      {request.context && (\n                        <div className=\"p-2 bg-orange-50 rounded-md mb-3\">\n                          <p className=\"text-xs text-orange-700\">\n                            <strong>Context:</strong> {request.context}\n                          </p>\n                        </div>\n                      )}\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"text-xs text-muted-foreground\">\n                          <Lightbulb className=\"h-3 w-3 inline mr-1\" />\n                          Your expertise can help a fellow scholar\n                        </div>\n                        \n                        <div className=\"flex gap-2\">\n                          <Button variant=\"outline\" size=\"sm\" className=\"text-xs\">\n                            Decline\n                          </Button>\n                          <Button variant=\"islamic\" size=\"sm\" className=\"text-xs\">\n                            <ArrowRight className=\"h-3 w-3 mr-1\" />\n                            Accept & Help\n                          </Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n            \n            {/* Mentorship Program */}\n            <Card className=\"bg-gradient-to-r from-orange-50 to-yellow-50 border border-orange-200\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <BookOpen className=\"h-6 w-6 text-orange-600\" />\n                  <div>\n                    <h4 className=\"font-medium text-orange-800\">Scholar Mentorship Program</h4>\n                    <p className=\"text-sm text-orange-600\">Guide new scholars and earn recognition</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"text-xs text-orange-700\">\n                    <div>• Mentor junior scholars</div>\n                    <div>• Share best practices</div>\n                    <div>• Build scholarly community</div>\n                  </div>\n                  \n                  <Button variant=\"outline\" size=\"sm\" className=\"text-orange-700 border-orange-300\">\n                    <Star className=\"h-3 w-3 mr-1\" />\n                    Join Program\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n        \n        {/* Global Collaboration Stats */}\n        <div className=\"pt-4 border-t border-purple-200\">\n          <div className=\"grid grid-cols-3 gap-4 text-center\">\n            <div>\n              <div className=\"text-lg font-bold text-purple-800\">\n                {collaborationData?.totalConsultations || 24}\n              </div>\n              <div className=\"text-xs text-muted-foreground\">This Month</div>\n            </div>\n            <div>\n              <div className=\"text-lg font-bold text-purple-800\">\n                {collaborationData?.avgResponseTime || '12m'}\n              </div>\n              <div className=\"text-xs text-muted-foreground\">Avg Response</div>\n            </div>\n            <div>\n              <div className=\"text-lg font-bold text-purple-800\">\n                {collaborationData?.satisfactionRate || '96%'}\n              </div>\n              <div className=\"text-xs text-muted-foreground\">Satisfaction</div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}